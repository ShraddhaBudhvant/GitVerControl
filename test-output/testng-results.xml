<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="12" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-04T12:57:37 IST" name="LoanDeparment" finished-at="2024-03-04T12:57:37 IST" duration-ms="123">
    <groups>
      <group name="Smoke">
        <method signature="Day3.MoblieLogin(java.lang.String)[pri:0, instance:test.Day3@47987356]" name="MoblieLogin" class="test.Day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-03-04T12:57:37 IST" name="CarLoan" finished-at="2024-03-04T12:57:37 IST" duration-ms="87">
      <class name="test.Day3">
        <test-method signature="webLogin()[pri:0, instance:test.Day3@47987356]" started-at="2024-03-04T12:57:37 IST" name="webLogin" finished-at="2024-03-04T12:57:37 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLogin -->
        <test-method signature="MoblieLogin(java.lang.String)[pri:0, instance:test.Day3@47987356]" started-at="2024-03-04T12:57:37 IST" name="MoblieLogin" finished-at="2024-03-04T12:57:37 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MoblieLogin -->
        <test-method signature="APILogin()[pri:0, instance:test.Day3@47987356]" started-at="2024-03-04T12:57:37 IST" name="APILogin" finished-at="2024-03-04T12:57:37 IST" depends-on-methods="test.Day3.webLogin" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILogin -->
      </class> <!-- test.Day3 -->
    </test> <!-- CarLoan -->
    <test started-at="2024-03-04T12:57:37 IST" name="PersonalLoan" finished-at="2024-03-04T12:57:37 IST" duration-ms="123">
      <class name="test.Day1">
        <test-method signature="demo()[pri:0, instance:test.Day1@11bd0f3b]" started-at="2024-03-04T12:57:37 IST" name="demo" finished-at="2024-03-04T12:57:37 IST" duration-ms="14" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.demo(Day1.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method signature="ThirdTest()[pri:0, instance:test.Day2@649bec2e]" started-at="2024-03-04T12:57:37 IST" name="ThirdTest" finished-at="2024-03-04T12:57:37 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ThirdTest -->
        <test-method signature="exDataPro(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@649bec2e]" started-at="2024-03-04T12:57:37 IST" name="exDataPro" data-provider="getData" finished-at="2024-03-04T12:57:37 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FirstUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FirstPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exDataPro -->
        <test-method signature="exDataPro(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@649bec2e]" started-at="2024-03-04T12:57:37 IST" name="exDataPro" data-provider="getData" finished-at="2024-03-04T12:57:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SecondUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SecondPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exDataPro -->
        <test-method signature="exDataPro(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@649bec2e]" started-at="2024-03-04T12:57:37 IST" name="exDataPro" data-provider="getData" finished-at="2024-03-04T12:57:37 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ThirdUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ThirdPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exDataPro -->
      </class> <!-- test.Day2 -->
      <class name="test.Day4">
        <test-method signature="webLogin()[pri:0, instance:test.Day4@31e5415e]" started-at="2024-03-04T12:57:37 IST" name="webLogin" finished-at="2024-03-04T12:57:37 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLogin -->
        <test-method signature="APILogin()[pri:0, instance:test.Day4@31e5415e]" started-at="2024-03-04T12:57:37 IST" name="APILogin" finished-at="2024-03-04T12:57:37 IST" depends-on-methods="test.Day4.webLogin" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILogin -->
      </class> <!-- test.Day4 -->
    </test> <!-- PersonalLoan -->
  </suite> <!-- LoanDeparment -->
</testng-results>
